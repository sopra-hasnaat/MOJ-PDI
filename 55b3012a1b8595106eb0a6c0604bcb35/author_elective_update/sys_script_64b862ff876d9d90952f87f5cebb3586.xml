<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_ster2_emfs_subject</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>submitMonitoringOrderAndCase</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

/** This script is executed before the Record is generated
 * `current`- GlideRecord produced by Record Producer
 * Don't use `current.update()` or `current.insert()` as the record is generated by Record Producer
 * Don't use `current.setValue('sys_class_name', 'xxx')` as this will trigger reparent flow and can cause data loss
 * Avoid `current.setAbortAction()` and generate a separate record
 * Use `producer.var1` to access variables
 */
var orderInfo = producer.monitoring_type + " - " + producer.adult_juvenile;
var grCase = new GlideRecord('sn_customerservice_case');
grCase.initialize();
grCase.u_subject = current.getUniqueValue();
grCase.priority = "4";
grCase.short_description = "New Tag installation - " + orderinfo;
grCase.description = "New Tag Installation";
grCase.category = "5";
if (orderInfo == 'am - adult') {
    grCase.subcategory = '1';
} else if (orderinfo == 'am - juvenile') {
    grCase.subcategory = '2';
} else if (orderinfo == 'gps - adult') {
    grCase.subcategory = '3';
} else if (orderinfo == 'gps - juvenile') {
    grCase.subcategory = '4';
} else if (orderinfo == 'rf - adult') {
    grCase.subcategory = '5';
} else if (orderinfo == 'rf - juvenile') {
    grCase.subcategory = '6';
} else if (orderinfo == 'non-fitted - adult') {
    grCase.subcategory = '7';
} else if (orderinfo == 'non-fitted - juvenile') {
    grCase.subcategory = '8';
}

// switch (orderInfo) {
//     case "am - adult":
//         grCase.subcategory = "1";
//         break;
//     case "AM - juvenile":
//         grCase.subcategory = "2";
//         break;
//     case "GPS - Adult":
//         grCase.subcategory = "3";
//         break;
//     case "GPS - juvenile":
//         grCase.subcategory = "4";
//         break;
// }
//grCase.location = current.
grCase.expected_start = producer.start_date_time;
grCase.contact = gs.getUserID();
grCase.assignment_group = "7d32384b1b6595906eb0a6c0604bcb7f";
grCase.insert();

var grMO = new GlideRecord('x_ster2_emfs_monitoring_order');
grMO.initialize();
grMO.subject_name = current.getUniqueValue();
grMO.order_type = producer.order_type;
grMO.sub_order_type = producer.sub_order_type;
grMO.monitoring_type = producer.monitoring_type;
grMO.primary_offence = producer.primary_offence;
grMO.court_prison = producer.court_prison;
grMO.court_reference = producer.what_is_the_court_prison_reference_for_this_order;
grMO.start_date_time = producer.start_date_time;
grMO.planned_end_date = producer.planned_end_date;
grMO.additional_requirements = producer.additional_requirements;
//grCase.contact = gs.getUserID();
grMO.insert();

// var ruleCodeLocation = producer.what_type_of_location_rule_has_been_applied;
// var pRuleCatLoc = new GlideRecord('u_rule_categories');
// pRuleCatLoc.addQuery('u_code', ruleCodeLocation);
// pRuleCatLoc.query();
// gs.info(pRuleCatLoc.getEncodedQuery());
// if (pRuleCatLoc.next()) {
//     var pRuleLoc = new GlideRecord('u_probation_rules');
//     pRuleLoc.initialize();
//     pRuleLoc.u_rule_code = pRuleCatLoc.getUniqueValue();
// 	pRuleLoc.u_subject_reference = current.getUniqueValue();
// 	pRuleLoc.u_active = true;
//     pRuleLoc.insert();
// }

// var  ruleCodeCurfew= producer.what_type_of_curfew_rule_has_been_applied;
// var pRuleCatCur = new GlideRecord('u_rule_categories');
// pRuleCatCur.addQuery('u_code', ruleCodeCurfew);
// pRuleCatCur.query();
// gs.info(pRuleCatCur.getEncodedQuery());
// if (pRuleCatCur.next()) {
//     var pRuleCurf = new GlideRecord('u_probation_rules');
//     pRuleCurf.initialize();
//     pRuleCurf.u_rule_code = pRuleCatCur.getUniqueValue();
// 	pRuleCurf.u_subject_reference = current.getUniqueValue();
// 	pRuleCurf.u_active = true;
//     pRuleCurf.insert();
// }
var grUser = new GlideRecord('sys_user');
grUser.initialize();
grUser.user_name = current.email;
grUser.first_name = current.first_name;
grUser.last_name = currentlast_name;
grUser.email = current.email;
grUser.mobile_phone = current.mobile;
grUser.active = true;
grUser.password_needs_reset = true;
//grUser.role = "u_subject_user";
grUser.insert();
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>hasnaat.khan.ems</sys_created_by>
        <sys_created_on>2022-09-02 09:24:03</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>64b862ff876d9d90952f87f5cebb3586</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>submitMonitoringOrderAndCase</sys_name>
        <sys_overrides/>
        <sys_package display_value="Electronic Monitoring" source="x_ster2_emfs">55b3012a1b8595106eb0a6c0604bcb35</sys_package>
        <sys_policy/>
        <sys_scope display_value="Electronic Monitoring">55b3012a1b8595106eb0a6c0604bcb35</sys_scope>
        <sys_update_name>sys_script_64b862ff876d9d90952f87f5cebb3586</sys_update_name>
        <sys_updated_by>hasnaat.khan.ems</sys_updated_by>
        <sys_updated_on>2022-09-02 09:24:03</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=64b862ff876d9d90952f87f5cebb3586"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Electronic Monitoring">55b3012a1b8595106eb0a6c0604bcb35</application>
        <file_path/>
        <instance_id>f4948f24dbc9599449eac5970596198f</instance_id>
        <instance_name>soprasteriafieldservicespov</instance_name>
        <name>sys_script_64b862ff876d9d90952f87f5cebb3586</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_ster2_emfs_subject&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;submitMonitoringOrderAndCase&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {

/** This script is executed before the Record is generated
 * `current`- GlideRecord produced by Record Producer
 * Don't use `current.update()` or `current.insert()` as the record is generated by Record Producer
 * Don't use `current.setValue('sys_class_name', 'xxx')` as this will trigger reparent flow and can cause data loss
 * Avoid `current.setAbortAction()` and generate a separate record
 * Use `producer.var1` to access variables
 */
var orderInfo = producer.monitoring_type + " - " + producer.adult_juvenile;
var grCase = new GlideRecord('sn_customerservice_case');
grCase.initialize();
grCase.u_subject = current.getUniqueValue();
grCase.priority = "4";
grCase.short_description = "New Tag installation - " + orderinfo;
grCase.description = "New Tag Installation";
grCase.category = "5";
if (orderInfo == 'am - adult') {
    grCase.subcategory = '1';
} else if (orderinfo == 'am - juvenile') {
    grCase.subcategory = '2';
} else if (orderinfo == 'gps - adult') {
    grCase.subcategory = '3';
} else if (orderinfo == 'gps - juvenile') {
    grCase.subcategory = '4';
} else if (orderinfo == 'rf - adult') {
    grCase.subcategory = '5';
} else if (orderinfo == 'rf - juvenile') {
    grCase.subcategory = '6';
} else if (orderinfo == 'non-fitted - adult') {
    grCase.subcategory = '7';
} else if (orderinfo == 'non-fitted - juvenile') {
    grCase.subcategory = '8';
}

// switch (orderInfo) {
//     case "am - adult":
//         grCase.subcategory = "1";
//         break;
//     case "AM - juvenile":
//         grCase.subcategory = "2";
//         break;
//     case "GPS - Adult":
//         grCase.subcategory = "3";
//         break;
//     case "GPS - juvenile":
//         grCase.subcategory = "4";
//         break;
// }
//grCase.location = current.
grCase.expected_start = producer.start_date_time;
grCase.contact = gs.getUserID();
grCase.assignment_group = "7d32384b1b6595906eb0a6c0604bcb7f";
grCase.insert();

var grMO = new GlideRecord('x_ster2_emfs_monitoring_order');
grMO.initialize();
grMO.subject_name = current.getUniqueValue();
grMO.order_type = producer.order_type;
grMO.sub_order_type = producer.sub_order_type;
grMO.monitoring_type = producer.monitoring_type;
grMO.primary_offence = producer.primary_offence;
grMO.court_prison = producer.court_prison;
grMO.court_reference = producer.what_is_the_court_prison_reference_for_this_order;
grMO.start_date_time = producer.start_date_time;
grMO.planned_end_date = producer.planned_end_date;
grMO.additional_requirements = producer.additional_requirements;
//grCase.contact = gs.getUserID();
grMO.insert();

// var ruleCodeLocation = producer.what_type_of_location_rule_has_been_applied;
// var pRuleCatLoc = new GlideRecord('u_rule_categories');
// pRuleCatLoc.addQuery('u_code', ruleCodeLocation);
// pRuleCatLoc.query();
// gs.info(pRuleCatLoc.getEncodedQuery());
// if (pRuleCatLoc.next()) {
//     var pRuleLoc = new GlideRecord('u_probation_rules');
//     pRuleLoc.initialize();
//     pRuleLoc.u_rule_code = pRuleCatLoc.getUniqueValue();
// 	pRuleLoc.u_subject_reference = current.getUniqueValue();
// 	pRuleLoc.u_active = true;
//     pRuleLoc.insert();
// }

// var  ruleCodeCurfew= producer.what_type_of_curfew_rule_has_been_applied;
// var pRuleCatCur = new GlideRecord('u_rule_categories');
// pRuleCatCur.addQuery('u_code', ruleCodeCurfew);
// pRuleCatCur.query();
// gs.info(pRuleCatCur.getEncodedQuery());
// if (pRuleCatCur.next()) {
//     var pRuleCurf = new GlideRecord('u_probation_rules');
//     pRuleCurf.initialize();
//     pRuleCurf.u_rule_code = pRuleCatCur.getUniqueValue();
// 	pRuleCurf.u_subject_reference = current.getUniqueValue();
// 	pRuleCurf.u_active = true;
//     pRuleCurf.insert();
// }
var grUser = new GlideRecord('sys_user');
grUser.initialize();
grUser.user_name = current.email;
grUser.first_name = current.first_name;
grUser.last_name = currentlast_name;
grUser.email = current.email;
grUser.mobile_phone = current.mobile;
grUser.active = true;
grUser.password_needs_reset = true;
//grUser.role = "u_subject_user";
grUser.insert();
})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;hasnaat.khan.ems&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2022-09-02 09:24:03&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;64b862ff876d9d90952f87f5cebb3586&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;submitMonitoringOrderAndCase&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Electronic Monitoring" source="x_ster2_emfs"&gt;55b3012a1b8595106eb0a6c0604bcb35&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Electronic Monitoring"&gt;55b3012a1b8595106eb0a6c0604bcb35&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_64b862ff876d9d90952f87f5cebb3586&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;hasnaat.khan.ems&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-09-02 09:24:03&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;after&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=64b862ff876d9d90952f87f5cebb3586"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1759803949</payload_hash>
        <record_name>submitMonitoringOrderAndCase</record_name>
        <reverted_from/>
        <source>238f82cf87159950952f87f5cebb35a2</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>hasnaat.khan.ems</sys_created_by>
        <sys_created_on>2022-09-02 09:24:03</sys_created_on>
        <sys_id>f4096aff876d9d90952f87f5cebb358a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>182fd83b4370000001</sys_recorded_at>
        <sys_updated_by>hasnaat.khan.ems</sys_updated_by>
        <sys_updated_on>2022-09-02 09:24:03</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>fc096affe56d9d90f51b7bc4d5a65c89</update_guid>
        <update_guid_history>fc096affe56d9d90f51b7bc4d5a65c89:1759803949</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>hasnaat.khan.ems</sys_created_by>
        <sys_created_on>2022-09-02 09:36:08</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>36f7345c55ad4b778bb611e43f1fa9e1</sys_id>
        <sys_metadata>64b862ff876d9d90952f87f5cebb3586</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>submitMonitoringOrderAndCase</sys_name>
        <sys_package display_value="Electronic Monitoring" source="x_ster2_emfs">55b3012a1b8595106eb0a6c0604bcb35</sys_package>
        <sys_parent display_value="Subjects">a3c95d6e1bc595106eb0a6c0604bcb98</sys_parent>
        <sys_policy/>
        <sys_scope display_value="Electronic Monitoring">55b3012a1b8595106eb0a6c0604bcb35</sys_scope>
        <sys_scope_delete display_value="">1728f35f3cdf4e24be031eef5c348910</sys_scope_delete>
        <sys_update_name>sys_script_64b862ff876d9d90952f87f5cebb3586</sys_update_name>
        <sys_update_version display_value="sys_script_64b862ff876d9d90952f87f5cebb3586">f4096aff876d9d90952f87f5cebb358a</sys_update_version>
        <sys_updated_by>hasnaat.khan.ems</sys_updated_by>
        <sys_updated_on>2022-09-02 09:36:08</sys_updated_on>
    </sys_metadata_delete>
</record_update>
