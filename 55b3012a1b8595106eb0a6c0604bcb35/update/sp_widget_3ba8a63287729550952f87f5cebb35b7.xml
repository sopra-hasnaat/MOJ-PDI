<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function (spUtil) {
    /* widget controller */
    var c = this;

    var todayDate = new Date(c.data.countDownWidgetTodayDate);
    var endDate = new Date(c.data.countDownWidgetEndDate);
    var startDate = new Date(c.data.countDownWidgetStartDate);

    var diffTime = Math.abs(endDate - todayDate);
    var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

    var diffTimeDateNow = Math.abs(startDate - todayDate);
    var diffDaysDateNow = Math.ceil(diffTimeDateNow / (1000 * 60 * 60 * 24));

    var diffTimeDateEnd = Math.abs(endDate - startDate);
    var diffDaysDateEnd = Math.ceil(diffTimeDateEnd / (1000 * 60 * 60 * 24));
    var result = Math.round(diffDaysDateNow / diffDaysDateEnd * 100 / 1);

    var percentage = document.getElementById('percentage');

    if (startDate > todayDate) {
        percentage.innerHTML = 'Monitoring Order not yet started';
    } else if (result >= 100) {
        percentage.innerHTML = 'Monitoring Order is complete';
    } else {
        percentage.innerHTML = result + '%';
    }

    function getTimeRemaining() {
        var t = Date.parse(endDate) - Date.parse(new Date());
        var seconds = Math.floor((t / 1000) % 60);
        var minutes = Math.floor((t / 1000 / 60) % 60);
        var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
        var days = Math.floor(t / (1000 * 60 * 60 * 24));
        return {
            'total': t,
            'days': days,
            'hours': hours,
            'minutes': minutes,
            'seconds': seconds
        };
    }

    function initializeClock(id, endtime) {
        var clock = document.getElementById(id);
        var daysSpan = clock.querySelector('.days');
        var hoursSpan = clock.querySelector('.hours');
        var minutesSpan = clock.querySelector('.minutes');
        var secondsSpan = clock.querySelector('.seconds');

        function updateClock() {
            var t = getTimeRemaining(endtime);

            daysSpan.innerHTML = t.days;
            hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
            minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
            secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

            if (t.total <= 0) {
                clearInterval(timeinterval);
            }
        }

        updateClock();
        var timeinterval = setInterval(updateClock, 1000);
    }

    var deadline = new Date(Date.parse(new Date()) + diffDays * 24 * 60 * 60 * 1000);
    initializeClock('clockdiv', deadline);

};]]></client_script>
        <controller_as>c</controller_as>
        <css>body{&#13;
	text-align: center;&#13;
	background: #00ECB9;&#13;
  font-family: sans-serif;&#13;
  font-weight: 100;&#13;
}&#13;
&#13;
h1{&#13;
  text-align: center;&#13;
  color: #396;&#13;
  font-weight: 100;&#13;
  font-size: 40px;&#13;
  margin: 40px 0px 20px;&#13;
  width: 100%;&#13;
}&#13;
&#13;
#clockdiv{&#13;
	font-family: sans-serif;&#13;
	color: #fff;&#13;
	display: inline-block;&#13;
	font-weight: 100;&#13;
	text-align: center;&#13;
	font-size: 30px;&#13;
    width: 100%;&#13;
}&#13;
&#13;
#clockdiv &gt; div{&#13;
	padding: 10px;&#13;
	border-radius: 3px;&#13;
	background: #00BF96;&#13;
	display: inline-block;&#13;
}&#13;
&#13;
#clockdiv div &gt; span{&#13;
	padding: 15px;&#13;
	border-radius: 3px;&#13;
	background: #00816A;&#13;
	display: inline-block;&#13;
}&#13;
&#13;
.smalltext{&#13;
	padding-top: 5px;&#13;
	font-size: 16px;&#13;
}&#13;
p {&#13;
 margin: 0 auto; &#13;
 text-align: center;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {

}]]></link>
        <name>countdown</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function () {
    var user = gs.getUserID();

    var grUser = new GlideRecord('sys_user');
    if (grUser.get(user)) {
        var subjectSysID = grUser.getValue('u_subject');

        var grOrder = new GlideRecord('x_ster2_emfs_monitoring_order');
        grOrder.addQuery('subject_name', subjectSysID);
        grOrder.query();
        while (grOrder.next()) {
            var todayDate = new GlideDateTime();
            var plannedEndDate = grOrder.getValue('planned_end_date');
            var startDate = grOrder.getValue('start_date_time');
            data.countDownWidgetEndDate = plannedEndDate.toString();    
            data.countDownWidgetTodayDate = todayDate.toString();    
            data.countDownWidgetStartDate = startDate.toString();    

        }
    }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>rebecca.seiga.ems</sys_created_by>
        <sys_created_on>2022-10-31 10:08:26</sys_created_on>
        <sys_id>3ba8a63287729550952f87f5cebb35b7</sys_id>
        <sys_mod_count>537</sys_mod_count>
        <sys_name>countdown</sys_name>
        <sys_package display_value="Electronic Monitoring" source="x_ster2_emfs">55b3012a1b8595106eb0a6c0604bcb35</sys_package>
        <sys_policy/>
        <sys_scope display_value="Electronic Monitoring">55b3012a1b8595106eb0a6c0604bcb35</sys_scope>
        <sys_update_name>sp_widget_3ba8a63287729550952f87f5cebb35b7</sys_update_name>
        <sys_updated_by>hasnaat.khan.ems</sys_updated_by>
        <sys_updated_on>2022-12-01 14:22:48</sys_updated_on>
        <template><![CDATA[<div>
    <h1>Coundown To End Of Monitoring Order</h1>
    <div id="clockdiv">
        <div>
            <span class="days"></span>
            <div class="smalltext">Days</div>
        </div>
        <div>
            <span class="hours"></span>
            <div class="smalltext">Hours</div>
        </div>
        <div>
            <span class="minutes"></span>
            <div class="smalltext">Minutes</div>
        </div>
        <div>
            <span class="seconds"></span>
            <div class="smalltext">Seconds</div>
        </div>
    </div>
  <p>Percentage: <span id="percentage"></span></p>
</div>]]></template>
    </sp_widget>
</record_update>
