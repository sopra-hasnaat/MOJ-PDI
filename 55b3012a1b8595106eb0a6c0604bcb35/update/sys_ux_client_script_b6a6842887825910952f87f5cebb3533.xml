<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="Record">c1a6042887825910952f87f5cebb35bc</macroponent>
        <name>label_value_2_value</name>
        <required_translations>[ ]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {TransformApiHelpers} params.helpers
 */
function evaluateProperty({
    api,
    helpers
}) {
    if (api.data.gform.nowRecordCommonHeader.tableDisplayValue === "Device Wearers") {
        var startDateWithTime = api.data.monitoring_orders.results[0].start_date_time.value;
        var startDate = new Date(startDateWithTime.slice(0, 10));
        var endDateWithTime = api.data.monitoring_orders.results[0].planned_end_date.value;
        var endDate = new Date(endDateWithTime.slice(0, 10));
    } else if (api.data.gform.nowRecordCommonHeader.tableDisplayValue === 'Monitoring Order') {
        var startDateWithTime = api.data.monitoring_order.result.start_date_time.value;
        var startDate = new Date(startDateWithTime.slice(0, 10));
        var endDateWithTime = api.data.monitoring_order.result.planned_end_date.value;
        var endDate = new Date(endDateWithTime.slice(0, 10));
    }

    var dateToday = new Date();
    var diffTimeDateNow = Math.abs(startDate - dateToday);
    var diffDaysDateNow = Math.ceil(diffTimeDateNow / (1000 * 60 * 60 * 24));

    var diffTimeDateEnd = Math.abs(endDate - startDate);
    var diffDaysDateEnd = Math.ceil(diffTimeDateEnd / (1000 * 60 * 60 * 24));
    var result = Math.round(diffDaysDateNow / diffDaysDateEnd * 100 / 1);

    if (startDate > dateToday) {
        return result = 'Monitoring Order not yet started';
    } else if (result >= 100) {
        return 'Monitoring Order is complete';
    } else {
        return result + '%';
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>hasnaat.khan.ems</sys_created_by>
        <sys_created_on>2022-09-16 15:45:54</sys_created_on>
        <sys_id>b6a6842887825910952f87f5cebb3533</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>label_value_2_value</sys_name>
        <sys_package display_value="Electronic Monitoring" source="x_ster2_emfs">55b3012a1b8595106eb0a6c0604bcb35</sys_package>
        <sys_policy/>
        <sys_scope display_value="Electronic Monitoring">55b3012a1b8595106eb0a6c0604bcb35</sys_scope>
        <sys_update_name>sys_ux_client_script_b6a6842887825910952f87f5cebb3533</sys_update_name>
        <sys_updated_by>hasnaat.khan.ems</sys_updated_by>
        <sys_updated_on>2022-11-20 15:47:48</sys_updated_on>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
